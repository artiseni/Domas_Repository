{"version":3,"file":"index.js","sources":["../src/core/Exception.ts","../src/constants/statuses.ts","../src/clientErrors/BadMapping.ts","../src/clientErrors/BadRequest.ts","../src/clientErrors/Conflict.ts","../src/clientErrors/ExpectationFailed.ts","../src/clientErrors/Forbidden.ts","../src/clientErrors/Gone.ts","../src/clientErrors/ImATeapot.ts","../src/clientErrors/LengthRequired.ts","../src/clientErrors/MethodNotAllowed.ts","../src/clientErrors/MisdirectedRequest.ts","../src/clientErrors/NotAcceptable.ts","../src/clientErrors/NotFound.ts","../src/clientErrors/PaymentRequired.ts","../src/clientErrors/PreconditionFailed.ts","../src/clientErrors/PreconditionRequired.ts","../src/clientErrors/ProxyAuthentificationRequired.ts","../src/clientErrors/RequestRangeUnsatisfiable.ts","../src/clientErrors/RequestEntityTooLarge.ts","../src/clientErrors/RequestHeaderFieldsTooLarge.ts","../src/clientErrors/RequestTimeout.ts","../src/clientErrors/RequestURITooLong.ts","../src/clientErrors/TooManyRequests.ts","../src/clientErrors/Unauthorized.ts","../src/clientErrors/UnsupportedMediaType.ts","../src/clientErrors/UpgradeRequired.ts","../src/clientErrors/UnavailableForLegalReasons.ts","../src/clientErrors/UnprocessableEntity.ts","../src/redirections/MovedPermanently.ts","../src/redirections/MovedTemporarily.ts","../src/redirections/MultipleChoices.ts","../src/redirections/NotModified.ts","../src/redirections/PermanentRedirect.ts","../src/redirections/SeeOther.ts","../src/redirections/TemporaryRedirect.ts","../src/redirections/TooManyRedirects.ts","../src/redirections/UseProxy.ts","../src/serverErrors/BadGateway.ts","../src/serverErrors/GatewayTimeout.ts","../src/serverErrors/InternalServerError.ts","../src/serverErrors/NotImplemented.ts","../src/serverErrors/ProxyError.ts","../src/serverErrors/ServiceUnvailable.ts","../src/serverErrors/NetworkAuthenticationRequired.ts","../src/serverErrors/NotExtended.ts","../src/serverErrors/VariantAlsoNegotiates.ts","../src/serverErrors/BandwidthLimitExceeded.ts"],"sourcesContent":["import {getStatusConstant} from \"@tsed/schema\";\n\nexport class Exception extends Error {\n  /**\n   * Exception base name\n   * @type {string}\n   */\n  public name: string = \"HTTP_EXCEPTION\";\n  /**\n   * Message of the exception\n   */\n  public message: string;\n  /**\n   * Exception type\n   * @type {string}\n   */\n  public type: string = \"HTTP_EXCEPTION\";\n  /**\n   * Stack calling\n   */\n  public stack: string;\n  public origin: Error & any;\n  /**\n   * HTTP Code Status\n   */\n  public status: number;\n  /**\n   *\n   */\n  public body: any;\n  /**\n   * Headers must be sent to the response\n   */\n  public headers: {[key: string]: any} = {};\n\n  [key: string]: any;\n\n  constructor(status: number = 500, message: string = \"\", origin?: Error | string | any) {\n    super(message);\n\n    this.status = status;\n    this.message = message;\n    this.name = getStatusConstant(status);\n\n    this.setOrigin(origin);\n  }\n\n  setHeaders(headers: {[key: string]: any}) {\n    this.headers = {\n      ...this.headers,\n      ...headers\n    };\n\n    return this;\n  }\n\n  setHeader(key: string, value: any) {\n    this.headers[key] = value;\n\n    return this;\n  }\n\n  setOrigin(origin: Error | string | any) {\n    if (origin) {\n      if (origin instanceof Error) {\n        this.origin = origin;\n        this.message = `${this.message}, innerException: ${this.origin.message}`.trim();\n      } else if (typeof origin === \"string\") {\n        this.origin = new Error(origin);\n        this.message = `${this.message}, innerException: ${this.origin.message}`.trim();\n      } else {\n        this.body = origin;\n      }\n    }\n  }\n\n  toString() {\n    return `${this.name}(${this.status}): ${this.message} `.trim();\n  }\n}\n\nexport class HTTPException extends Exception {}\n","import {HTTP_STATUS_MESSAGES} from \"@tsed/schema\";\n\n/**\n *\n */\nexport const HTTP_STATUSES: any = HTTP_STATUS_MESSAGES;\n","import {Exception} from \"../core/Exception\";\n\nexport class BadMapping extends Exception {\n  static readonly STATUS = 421;\n  name: string = \"BAD_MAPPING\";\n\n  constructor(message: string, origin?: Error | string | any) {\n    super(BadMapping.STATUS, message, origin);\n  }\n}\n","import {Exception} from \"../core/Exception\";\n\nexport class BadRequest extends Exception {\n  static readonly STATUS = 400;\n\n  constructor(message: string, origin?: Error | string | any) {\n    super(BadRequest.STATUS, message, origin);\n  }\n}\n","import {Exception} from \"../core/Exception\";\n\nexport class Conflict extends Exception {\n  static readonly STATUS = 409;\n\n  constructor(message: string, origin?: Error | string | any) {\n    super(Conflict.STATUS, message, origin);\n  }\n}\n","import {Exception} from \"../core/Exception\";\n\nexport class ExpectationFailed extends Exception {\n  static readonly STATUS = 417;\n\n  constructor(message: string, origin?: Error | string | any) {\n    super(ExpectationFailed.STATUS, message, origin);\n  }\n}\n","import {Exception} from \"../core/Exception\";\n\nexport class Forbidden extends Exception {\n  static readonly STATUS = 403;\n\n  constructor(message: string, origin?: Error | string | any) {\n    super(Forbidden.STATUS, message, origin);\n  }\n}\n","import {Exception} from \"../core/Exception\";\n\nexport class Gone extends Exception {\n  static readonly STATUS = 410;\n\n  constructor(message: string, origin?: Error | string | any) {\n    super(Gone.STATUS, message, origin);\n  }\n}\n","import {Exception} from \"../core/Exception\";\n\nexport class ImATeapot extends Exception {\n  static readonly STATUS = 418;\n  name: string = \"IM_A_TEAPOT\";\n\n  constructor(message: string, origin?: Error | string | any) {\n    super(ImATeapot.STATUS, message, origin);\n  }\n}\n","import {Exception} from \"../core/Exception\";\n\nexport class LengthRequired extends Exception {\n  static readonly STATUS = 411;\n\n  constructor(message: string, origin?: Error | string | any) {\n    super(LengthRequired.STATUS, message, origin);\n  }\n}\n","import {Exception} from \"../core/Exception\";\n\nexport class MethodNotAllowed extends Exception {\n  static readonly STATUS = 405;\n\n  constructor(message: string, origin?: Error | string | any) {\n    super(MethodNotAllowed.STATUS, message, origin);\n  }\n}\n","import {Exception} from \"../core/Exception\";\n\nexport class MisdirectedRequest extends Exception {\n  static readonly STATUS = 421;\n\n  constructor(message: string, origin?: Error | string | any) {\n    super(MisdirectedRequest.STATUS, message, origin);\n  }\n}\n","import {Exception} from \"../core/Exception\";\n\nexport class NotAcceptable extends Exception {\n  static readonly STATUS = 406;\n\n  constructor(message: string, origin: Error | string | any = \"You must accept content-type \" + message) {\n    super(NotAcceptable.STATUS, origin);\n  }\n}\n","import {Exception} from \"../core/Exception\";\n\nexport class NotFound extends Exception {\n  static readonly STATUS = 404;\n\n  constructor(message: string, origin?: Error | string | any) {\n    super(NotFound.STATUS, message, origin);\n  }\n}\n","import {Exception} from \"../core/Exception\";\n\nexport class PaymentRequired extends Exception {\n  static readonly STATUS = 402;\n\n  constructor(message: string, origin?: Error | string | any) {\n    super(PaymentRequired.STATUS, message, origin);\n  }\n}\n","import {Exception} from \"../core/Exception\";\n\nexport class PreconditionFailed extends Exception {\n  static readonly STATUS = 412;\n\n  constructor(message: string, origin?: Error | string | any) {\n    super(PreconditionFailed.STATUS, message, origin);\n  }\n}\n","import {Exception} from \"../core/Exception\";\n\nexport class PreconditionRequired extends Exception {\n  static readonly STATUS = 428;\n\n  constructor(message: string, origin?: Error | string | any) {\n    super(PreconditionRequired.STATUS, message, origin);\n  }\n}\n","import {Exception} from \"../core/Exception\";\n\nexport class ProxyAuthentificationRequired extends Exception {\n  static readonly STATUS = 407;\n\n  constructor(message: string, origin?: Error | string | any) {\n    super(ProxyAuthentificationRequired.STATUS, message, origin);\n  }\n}\n","import {Exception} from \"../core/Exception\";\n\nexport class RequestRangeUnsatisfiable extends Exception {\n  static readonly STATUS = 416;\n\n  constructor(message: string, origin?: Error | string | any) {\n    super(RequestRangeUnsatisfiable.STATUS, message, origin);\n  }\n}\n","import {Exception} from \"../core/Exception\";\n\nexport class RequestEntityTooLarge extends Exception {\n  static readonly STATUS = 413;\n\n  constructor(message: string, origin?: Error | string | any) {\n    super(RequestEntityTooLarge.STATUS, message, origin);\n  }\n}\n","import {Exception} from \"../core/Exception\";\n\nexport class RequestHeaderFieldsTooLarge extends Exception {\n  static readonly STATUS = 431;\n\n  constructor(message: string, origin?: Error | string | any) {\n    super(RequestHeaderFieldsTooLarge.STATUS, message, origin);\n  }\n}\n","import {Exception} from \"../core/Exception\";\n\nexport class RequestTimeout extends Exception {\n  static readonly STATUS = 408;\n\n  constructor(message: string, origin?: Error | string | any) {\n    super(RequestTimeout.STATUS, message, origin);\n  }\n}\n","import {Exception} from \"../core/Exception\";\n\nexport class RequestURITooLong extends Exception {\n  static readonly STATUS = 414;\n\n  constructor(message: string, origin?: Error | string | any) {\n    super(RequestURITooLong.STATUS, message, origin);\n  }\n}\n","import {Exception} from \"../core/Exception\";\n\nexport class TooManyRequests extends Exception {\n  static readonly STATUS = 429;\n\n  constructor(message: string, origin?: Error | string | any) {\n    super(TooManyRequests.STATUS, message, origin);\n  }\n}\n","import {Exception} from \"../core/Exception\";\n\nexport class Unauthorized extends Exception {\n  static readonly STATUS = 401;\n\n  constructor(message: string, origin?: Error | string | any) {\n    super(Unauthorized.STATUS, message, origin);\n  }\n}\n","import {Exception} from \"../core/Exception\";\n\nexport class UnsupportedMediaType extends Exception {\n  static readonly STATUS = 415;\n\n  constructor(message: string, origin?: Error | string | any) {\n    super(UnsupportedMediaType.STATUS, message, origin);\n  }\n}\n","import {Exception} from \"../core/Exception\";\n\nexport class UpgradeRequired extends Exception {\n  static readonly STATUS = 426;\n\n  constructor(message: string, origin?: Error | string | any) {\n    super(UpgradeRequired.STATUS, message, origin);\n  }\n}\n","import {Exception} from \"../core/Exception\";\n\nexport class UnavailableForLegalReasons extends Exception {\n  static readonly STATUS = 451;\n\n  constructor(message: string, origin?: Error | string | any) {\n    super(UnavailableForLegalReasons.STATUS, message, origin);\n  }\n}\n","import {Exception} from \"../core/Exception\";\n\nexport class UnprocessableEntity extends Exception {\n  static readonly STATUS = 422;\n\n  constructor(message: string, origin?: Error | string | any) {\n    super(UnprocessableEntity.STATUS, message, origin);\n  }\n}\n","import {Exception} from \"../core/Exception\";\n\nexport class MovedPermanently extends Exception {\n  static readonly STATUS = 301;\n\n  constructor(message: string, origin?: Error | string | any) {\n    super(MovedPermanently.STATUS, message, origin);\n  }\n}\n","import {Exception} from \"../core/Exception\";\n\nexport class MovedTemporarily extends Exception {\n  static readonly STATUS = 302;\n  name: string = \"MOVED_TEMPORARILY\";\n\n  constructor(message: string, origin?: Error | string | any) {\n    super(MovedTemporarily.STATUS, message, origin);\n  }\n}\n","import {Exception} from \"../core/Exception\";\n\nexport class MultipleChoices extends Exception {\n  static readonly STATUS = 300;\n\n  constructor(message: string, origin?: Error | string | any) {\n    super(MultipleChoices.STATUS, message, origin);\n  }\n}\n","import {Exception} from \"../core/Exception\";\n\nexport class NotModified extends Exception {\n  static readonly STATUS = 304;\n\n  constructor(message: string, origin?: Error | string | any) {\n    super(NotModified.STATUS, message, origin);\n  }\n}\n","import {Exception} from \"../core/Exception\";\n\nexport class PermanentRedirect extends Exception {\n  static readonly STATUS = 308;\n\n  constructor(message: string, origin?: Error | string | any) {\n    super(PermanentRedirect.STATUS, message, origin);\n  }\n}\n","import {Exception} from \"../core/Exception\";\n\nexport class SeeOther extends Exception {\n  static readonly STATUS = 303;\n\n  constructor(message: string, origin?: Error | string | any) {\n    super(SeeOther.STATUS, message, origin);\n  }\n}\n","import {Exception} from \"../core/Exception\";\n\nexport class TemporaryRedirect extends Exception {\n  static readonly STATUS = 307;\n\n  constructor(message: string, origin?: Error | string | any) {\n    super(TemporaryRedirect.STATUS, message, origin);\n  }\n}\n","import {Exception} from \"../core/Exception\";\n\nexport class TooManyRedirects extends Exception {\n  static readonly STATUS = 310;\n\n  constructor(message: string, origin?: Error | string | any) {\n    super(TooManyRedirects.STATUS, message, origin);\n  }\n}\n","import {Exception} from \"../core/Exception\";\n\nexport class UseProxy extends Exception {\n  static readonly STATUS = 305;\n\n  constructor(message: string, origin?: Error | string | any) {\n    super(UseProxy.STATUS, message, origin);\n  }\n}\n","import {Exception} from \"../core/Exception\";\n\nexport class BadGateway extends Exception {\n  static readonly STATUS = 502;\n\n  constructor(message: string, origin?: Error | string | any) {\n    super(BadGateway.STATUS, message, origin);\n  }\n}\n","import {Exception} from \"../core/Exception\";\n\nexport class GatewayTimeout extends Exception {\n  static readonly STATUS = 504;\n\n  constructor(message: string, origin?: Error | string | any) {\n    super(GatewayTimeout.STATUS, message, origin);\n  }\n}\n","import {Exception} from \"../core/Exception\";\n\nexport class InternalServerError extends Exception {\n  static readonly STATUS = 500;\n\n  constructor(message: string, origin?: Error | string | any) {\n    super(InternalServerError.STATUS, message, origin);\n  }\n}\n","import {Exception} from \"../core/Exception\";\n\nexport class NotImplemented extends Exception {\n  static readonly STATUS = 501;\n\n  constructor(message: string, origin?: Error | string | any) {\n    super(NotImplemented.STATUS, message, origin);\n  }\n}\n","import {Exception} from \"../core/Exception\";\n\nexport class ProxyError extends Exception {\n  static readonly STATUS = 502;\n  name: string = \"PROXY_ERROR\";\n\n  constructor(message: string, origin?: Error | string | any) {\n    super(ProxyError.STATUS, message, origin);\n  }\n}\n","import {Exception} from \"../core/Exception\";\n\nexport class ServiceUnvailable extends Exception {\n  static readonly STATUS = 503;\n\n  constructor(message: string, origin?: Error | string | any) {\n    super(ServiceUnvailable.STATUS, message, origin);\n  }\n}\n","import {Exception} from \"../core/Exception\";\n\nexport class NetworkAuthenticationRequired extends Exception {\n  static readonly STATUS = 511;\n\n  constructor(message: string, origin?: Error | string | any) {\n    super(NetworkAuthenticationRequired.STATUS, message, origin);\n  }\n}\n","import {Exception} from \"../core/Exception\";\n\nexport class NotExtended extends Exception {\n  static readonly STATUS = 510;\n\n  constructor(message: string, origin?: Error | string | any) {\n    super(NotExtended.STATUS, message, origin);\n  }\n}\n","import {Exception} from \"../core/Exception\";\n\nexport class VariantAlsoNegotiates extends Exception {\n  static readonly STATUS = 506;\n\n  constructor(message: string, origin?: Error | string | any) {\n    super(VariantAlsoNegotiates.STATUS, message, origin);\n  }\n}\n","import {Exception} from \"../core/Exception\";\n\nexport class BandwidthLimitExceeded extends Exception {\n  static readonly STATUS = 509;\n\n  constructor(message: string, origin?: Error | string | any) {\n    super(BandwidthLimitExceeded.STATUS, message, origin);\n  }\n}\n"],"names":["Exception","Error","constructor","status","message","origin","name","getStatusConstant","setOrigin","setHeaders","headers","setHeader","key","value","trim","body","toString","HTTPException","HTTP_STATUSES","HTTP_STATUS_MESSAGES","BadMapping","STATUS","BadRequest","Conflict","ExpectationFailed","Forbidden","Gone","ImATeapot","LengthRequired","MethodNotAllowed","MisdirectedRequest","NotAcceptable","NotFound","PaymentRequired","PreconditionFailed","PreconditionRequired","ProxyAuthentificationRequired","RequestRangeUnsatisfiable","RequestEntityTooLarge","RequestHeaderFieldsTooLarge","RequestTimeout","RequestURITooLong","TooManyRequests","Unauthorized","UnsupportedMediaType","UpgradeRequired","UnavailableForLegalReasons","UnprocessableEntity","MovedPermanently","MovedTemporarily","MultipleChoices","NotModified","PermanentRedirect","SeeOther","TemporaryRedirect","TooManyRedirects","UseProxy","BadGateway","GatewayTimeout","InternalServerError","NotImplemented","ProxyError","ServiceUnvailable","NetworkAuthenticationRequired","NotExtended","VariantAlsoNegotiates","BandwidthLimitExceeded"],"mappings":"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"}