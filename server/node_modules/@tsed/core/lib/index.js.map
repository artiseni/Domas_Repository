{"version":3,"file":"index.js","sources":["../src/utils/catchError.ts","../src/utils/proxyDelegation.ts","../src/utils/uniq.ts","../src/utils/objects/classOf.ts","../src/utils/objects/getInheritedClass.ts","../src/utils/objects/nameOf.ts","../src/utils/objects/ancestorOf.ts","../src/utils/objects/prototypeOf.ts","../src/utils/objects/methodsOf.ts","../src/utils/objects/descriptorOf.ts","../src/utils/decorators/decorateMethodsOf.ts","../src/utils/decorators/decoratorArgs.ts","../src/domain/DecoratorTypes.ts","../src/utils/decorators/decoratorTypeOf.ts","../src/utils/decorators/inheritedDescriptorOf.ts","../src/utils/decorators/useDecorators.ts","../src/utils/decorators/useMethodDecorators.ts","../src/utils/objects/isProtectedKey.ts","../src/utils/objects/cleanObject.ts","../src/utils/objects/constructorOf.ts","../src/utils/objects/isArray.ts","../src/utils/objects/isDate.ts","../src/utils/objects/isFunction.ts","../src/utils/objects/isNil.ts","../src/utils/objects/isBoolean.ts","../src/utils/objects/isNumber.ts","../src/utils/objects/isString.ts","../src/utils/objects/isPrimitive.ts","../src/utils/objects/isSymbol.ts","../src/utils/objects/deepClone.ts","../src/utils/objects/createInstance.ts","../src/utils/objects/objectKeys.ts","../src/utils/objects/deepExtends.ts","../src/utils/objects/deepMerge.ts","../src/utils/objects/isArrowFn.ts","../src/utils/objects/isPlainObject.ts","../src/utils/objects/isPromise.ts","../src/utils/objects/isClass.ts","../src/utils/objects/getClassOrSymbol.ts","../src/utils/objects/toStringConstructor.ts","../src/utils/objects/getConstructorArgNames.ts","../src/utils/objects/isEnumerable.ts","../src/utils/objects/getEnumerableKeys.ts","../src/utils/objects/isObject.ts","../src/utils/objects/getValue.ts","../src/utils/objects/isCollection.ts","../src/utils/objects/isEmpty.ts","../src/utils/objects/isInheritedFrom.ts","../src/utils/objects/isObservable.ts","../src/utils/objects/isStream.ts","../src/utils/objects/primitiveOf.ts","../src/utils/objects/setValue.ts","../src/utils/objects/toMap.ts","../src/utils/path/normalizePath.ts","../src/domain/Entity.ts","../src/domain/Env.ts","../src/domain/Hooks.ts","../src/domain/Metadata.ts","../src/domain/Store.ts","../src/domain/Type.ts","../src/errors/UnsupportedDecoratorType.ts","../src/decorators/deprecated.ts","../src/decorators/configurable.ts","../src/decorators/enumerable.ts","../src/decorators/writable.ts","../src/decorators/readOnly.ts","../src/decorators/notConfigurable.ts","../src/decorators/notEnumerable.ts","../src/decorators/storeFn.ts","../src/decorators/storeSet.ts","../src/decorators/storeMerge.ts"],"sourcesContent":["export function catchError<T extends Error>(cb: Function): T | undefined {\n  try {\n    cb();\n  } catch (er) {\n    return er;\n  }\n}\n\nexport async function catchAsyncError<T extends Error>(cb: Function): Promise<T | undefined> {\n  try {\n    await cb();\n  } catch (er) {\n    return er;\n  }\n}\n","/**\n * @ignore\n */\nexport type ProxyDelegationGetter<T = any> = (target: T, property: PropertyKey) => any | undefined;\n/**\n * @ignore\n */\nexport type ProxyDelegationRemove<T = any> = (target: T, property: PropertyKey) => any;\n/**\n * @ignore\n */\nexport type ProxyDelegationSetter<T = any> = (target: T, property: PropertyKey, value: any, receiver: any) => any;\n/**\n * @ignore\n */\nexport type ProxyDelegationOwnKeys<T = any> = (target: T) => (string | symbol)[];\n/**\n * @ignore\n */\nexport interface ProxyDelegation<T extends object> {\n  handlers?: ProxyHandler<T>;\n  getter?: ProxyDelegationGetter<T>;\n  setter?: ProxyDelegationSetter<T>;\n  remove?: ProxyDelegationRemove<T>;\n  ownKeys?: ProxyDelegationOwnKeys<T>;\n}\n\n/**\n * Create a complete and iterable trap.\n * @param self\n * @param options\n * @ignore\n */\nexport function proxyDelegation<T extends object = any>(self: any, options: ProxyDelegation<T> = {}) {\n  const {handlers = {}, remove, ownKeys} = options;\n  const get: ProxyDelegationGetter = options.getter || ((target: any, propertyKey: PropertyKey) => target.get(propertyKey));\n  const set: ProxyDelegationSetter =\n    options.setter || ((target: any, propertyKey: PropertyKey, value: any) => !!target.set(propertyKey, value));\n\n  const itsOwnProp = (target: any, p: PropertyKey) => Reflect.has(target, p) || typeof p === \"symbol\";\n\n  return new Proxy<T>(self, {\n    getOwnPropertyDescriptor(target: any, p: PropertyKey): PropertyDescriptor | undefined {\n      return Reflect.getOwnPropertyDescriptor(target, p);\n    },\n\n    has(target: any, p: PropertyKey): boolean {\n      if (itsOwnProp(target, p)) {\n        return Reflect.has(target, p);\n      }\n\n      return get(target, p) !== undefined;\n    },\n\n    get(target: any, p: PropertyKey, receiver: any): any {\n      if (itsOwnProp(target, p)) {\n        return Reflect.get(target, p, receiver);\n      }\n\n      return get(target, p);\n    },\n\n    set(target: any, p: PropertyKey, value: any, receiver: any): boolean {\n      if (itsOwnProp(target, p)) {\n        return Reflect.set(target, p, value, receiver);\n      }\n\n      return !!set(target, p as any, value, receiver);\n    },\n\n    deleteProperty(target: any, p: PropertyKey): boolean {\n      if (itsOwnProp(target, p) || !remove) {\n        return Reflect.deleteProperty(target, p);\n      }\n\n      return remove(target, p);\n    },\n\n    defineProperty(target: any, p: PropertyKey, attributes: PropertyDescriptor): boolean {\n      return Reflect.defineProperty(target, p, attributes);\n    },\n\n    ownKeys(target: any) {\n      return Reflect.ownKeys(target).concat((ownKeys && ownKeys(target)) || []);\n    },\n    ...handlers\n  });\n}\n","export function uniq<T = any>(list: T[]): T[] {\n  return Array.from(new Set(list).values());\n}\n\nexport function uniqBy<T = any>(list: T[], key = \"id\"): T[] {\n  const map = new Map();\n\n  list.forEach((item: any) => {\n    map.set(item[key], item);\n  });\n\n  return Array.from(map.values());\n}\n","/**\n * Get the provide constructor if target is an instance.\n * @param target\n * @returns {*}\n */\nexport function getClass(target: any): any {\n  return target.prototype ? target : target.constructor;\n}\n\n/**\n * Get the provide constructor if target is an instance.\n * @param target\n * @returns {*}\n * @alias getClass\n */\nexport function classOf(target: any) {\n  return getClass(target);\n}\n","export function getInheritedClass(target: any): any {\n  return Object.getPrototypeOf(target);\n}\n","/**\n * Get the provide name.\n * @param targetClass\n */\nexport function nameOfClass(targetClass: any): string {\n  return typeof targetClass === \"function\" ? targetClass.name : targetClass.constructor.name;\n}\n\n/**\n * Get symbol name.\n * @param sym\n */\nexport const nameOfSymbol = (sym: symbol): string => sym.toString().replace(\"Symbol(\", \"\").replace(\")\", \"\");\n\n/**\n * Get object name\n */\nexport function nameOf(obj: any): string {\n  switch (typeof obj) {\n    default:\n      return \"\" + obj;\n    case \"symbol\":\n      return nameOfSymbol(obj);\n    case \"function\":\n      return nameOfClass(obj);\n  }\n}\n","import {classOf} from \"./classOf\";\nimport {getInheritedClass} from \"./getInheritedClass\";\nimport {nameOf} from \"./nameOf\";\n\n/**\n *\n * @param target\n * @returns {Array}\n */\nexport function ancestorsOf(target: any) {\n  const classes = [];\n\n  let currentTarget = classOf(target);\n\n  while (nameOf(currentTarget) !== \"\") {\n    classes.unshift(currentTarget);\n    currentTarget = getInheritedClass(currentTarget);\n  }\n\n  return classes;\n}\n","import {classOf} from \"./classOf\";\n\n/**\n * Return the prototype of the given class.\n * @param target\n * @returns {any}\n */\nexport function prototypeOf(target: any) {\n  return classOf(target) === target ? target.prototype : target;\n}\n","import {ancestorsOf} from \"./ancestorOf\";\nimport {classOf} from \"./classOf\";\nimport {prototypeOf} from \"./prototypeOf\";\n\n/**\n * Return all methods for a given class.\n * @param target\n */\nexport function methodsOf(target: any) {\n  const methods = new Map();\n  target = classOf(target);\n\n  ancestorsOf(target).forEach((target) => {\n    const keys = Reflect.ownKeys(prototypeOf(target));\n\n    keys.forEach((propertyKey: string) => {\n      if (propertyKey !== \"constructor\") {\n        methods.set(propertyKey, {target, propertyKey});\n      }\n    });\n  });\n\n  return Array.from(methods.values());\n}\n","/**\n * Return the descriptor for a given class and propertyKey\n * @param target\n * @param {string} propertyKey\n * @returns {PropertyDescriptor}\n */\nexport function descriptorOf(target: any, propertyKey: string | symbol): PropertyDescriptor {\n  return Object.getOwnPropertyDescriptor((target && target.prototype) || target, propertyKey)!;\n}\n","import {classOf} from \"../objects/classOf\";\nimport {methodsOf} from \"../objects/methodsOf\";\nimport {prototypeOf} from \"../objects/prototypeOf\";\nimport {descriptorOf} from \"../objects/descriptorOf\";\n\nexport function decorateMethodsOf(klass: any, decorator: any) {\n  methodsOf(klass).forEach(({target, propertyKey}) => {\n    if (target !== classOf(klass)) {\n      Object.defineProperty(prototypeOf(klass), propertyKey, {\n        value(...args: any[]) {\n          return prototypeOf(target)[propertyKey].apply(this, args);\n        }\n      });\n    }\n\n    decorator(prototypeOf(klass), propertyKey, descriptorOf(klass, propertyKey));\n  });\n}\n","import {DecoratorParameters} from \"../../interfaces/DecoratorParameters\";\nimport {descriptorOf} from \"../objects/descriptorOf\";\n\nexport function decoratorArgs(target: any, propertyKey: string): DecoratorParameters {\n  return [target, propertyKey, descriptorOf(target, propertyKey)!];\n}\n","export enum DecoratorTypes {\n  PARAM = \"parameter\",\n  PARAM_CTOR = \"parameter.constructor\",\n  PARAM_STC = \"parameter.static\",\n  PROP = \"property\",\n  PROP_STC = \"property.static\",\n  METHOD = \"method\",\n  METHOD_STC = \"method.static\",\n  CLASS = \"class\"\n}\n","import {DecoratorTypes} from \"../../domain/DecoratorTypes\";\nimport {classOf} from \"../objects/classOf\";\n\nexport function decoratorTypeOf(args: any[]): DecoratorTypes {\n  const [target, propertyKey, descriptor] = args;\n\n  const staticType = (type: string): any => {\n    return target !== classOf(target) ? type : `${type}.static`;\n  };\n\n  if (typeof descriptor === \"number\") {\n    return propertyKey ? staticType(\"parameter\") : \"parameter.constructor\";\n  }\n\n  if (descriptor && descriptor.value) {\n    return staticType(\"method\");\n  }\n\n  if ((propertyKey && descriptor === undefined) || descriptor) {\n    return staticType(\"property\");\n  }\n\n  return DecoratorTypes.CLASS;\n}\n","import {ancestorsOf} from \"../objects/ancestorOf\";\n\nexport function inheritedDescriptorOf(target: any, propertyKey: string): PropertyDescriptor | undefined {\n  for (const klass of ancestorsOf(target)) {\n    const descriptor = Object.getOwnPropertyDescriptor((klass && klass.prototype) || klass, propertyKey)!;\n\n    if (descriptor) {\n      return descriptor;\n    }\n  }\n\n  return undefined;\n}\n","import {DecoratorParameters} from \"../../interfaces/DecoratorParameters\";\nimport {AnyDecorator} from \"../../interfaces/AnyDecorator\";\n\nexport function useDecorators(...decorators: AnyDecorator[]): any {\n  return (...args: DecoratorParameters) => {\n    decorators\n      .filter((o: any) => !!o)\n      .forEach((decorator: Function) => {\n        decorator(...args);\n      });\n  };\n}\n","import {AnyDecorator} from \"../../interfaces/AnyDecorator\";\nimport {descriptorOf} from \"../objects/descriptorOf\";\n\nexport function useMethodDecorator(decorator: AnyDecorator) {\n  return (target: any, propertyKey: string | symbol) => decorator(target, propertyKey, descriptorOf(target, propertyKey));\n}\n\nexport function useMethodDecorators(...decorators: AnyDecorator[]) {\n  return (target: any, propertyKey: string | symbol) => {\n    decorators.filter(Boolean).forEach((decorator) => decorator(target, propertyKey, descriptorOf(target, propertyKey)));\n  };\n}\n","/**\n * Prevent prototype pollution vulnerability\n * @param key\n */\nexport function isProtectedKey(key: string) {\n  return [\"__proto__\", \"constructor\", \"prototype\"].includes(key);\n}\n","import {isProtectedKey} from \"./isProtectedKey\";\n/**\n * Remove undefined value\n * @param obj\n * @param ignore\n */\nexport function cleanObject(obj: any, ignore: string[] = []): any {\n  return Object.entries(obj).reduce((obj, [key, value]) => {\n    if (isProtectedKey(key) || ignore.includes(key)) {\n      return obj;\n    }\n\n    return value === undefined\n      ? obj\n      : {\n          ...obj,\n          [key]: value\n        };\n  }, {});\n}\n","import type {Type} from \"../../domain/Type\";\n\n/**\n * Get the class constructor\n * @param target\n */\nexport function getConstructor(target: any): Type<any> {\n  return typeof target === \"function\" ? target : target.constructor;\n}\n\n/**\n * Get the class constructor\n * @param target\n */\nexport function constructorOf(target: any): Type<any> {\n  return getConstructor(target);\n}\n","/**\n * Return true if value is an array\n * @param target\n * @returns {boolean}\n */\nexport function isArray<T = any>(target: unknown): target is T[] {\n  return Array.isArray(target);\n}\n\n/**\n * Return true if the clazz is an array.\n * @param target\n * @returns {boolean}\n * @ignore\n */\nexport function isArrayOrArrayClass<T = any>(target: unknown): target is T[] {\n  return target === Array || isArray(target);\n}\n","/**\n *\n * @param target\n * @returns {boolean}\n */\nexport function isDate(target: any): target is Date {\n  return target === Date || (target instanceof Date && !isNaN(+target));\n}\n","export function isFunction(target: any): target is Function {\n  return typeof target === \"function\";\n}\n","export function isNil(value: any): boolean {\n  return value === undefined || value === null;\n}\n","/**\n *\n * @param target\n * @returns {boolean}\n */\nexport function isBoolean(target: any): target is boolean {\n  return typeof target === \"boolean\" || target instanceof Boolean || target === Boolean;\n}\n\nexport function isBooleanOrBooleanClass(target: any): target is boolean {\n  return typeof target === \"boolean\" || target instanceof Boolean || target === Boolean;\n}\n","/**\n *\n * @param target\n * @returns {boolean}\n */\nexport function isNumber(target: any): target is number {\n  return typeof target === \"number\";\n}\n\nexport function isNumberOrNumberClass(target: any): target is number {\n  return typeof target === \"number\" || target instanceof Number || target === Number;\n}\n","/**\n * @param target\n * @returns {boolean}\n */\nexport function isString(target: any): target is string {\n  return typeof target === \"string\";\n}\n\nexport function isStringOrStringClass(target: any): target is string {\n  return typeof target === \"string\" || target instanceof String || target === String;\n}\n","import {isBoolean, isBooleanOrBooleanClass} from \"./isBoolean\";\nimport {isNumber, isNumberOrNumberClass} from \"./isNumber\";\nimport {isString, isStringOrStringClass} from \"./isString\";\n\n/**\n * Return true if the given obj is a primitive.\n * @param target\n * @returns {boolean}\n * @ignore\n */\nexport function isPrimitiveOrPrimitiveClass(target: any): boolean {\n  return isStringOrStringClass(target) || isNumberOrNumberClass(target) || isBooleanOrBooleanClass(target);\n}\n\n/**\n * Return true if the given obj is a primitive.\n * @param target\n * @returns {boolean}\n */\nexport function isPrimitive(target: any): boolean {\n  return isString(target) || isNumber(target) || isBoolean(target);\n}\n\nexport function isPrimitiveClass(target: any) {\n  return [String, Number, Boolean].includes(target);\n}\n","/**\n *\n * @param target\n */\nexport function isSymbol(target: any): target is symbol {\n  return typeof target === \"symbol\";\n}\n\nexport function isSymbolOrSymbolClass(target: any): target is symbol {\n  return typeof target === \"symbol\" || target instanceof Symbol || target === Symbol;\n}\n","import {isArray} from \"./isArray\";\nimport {isDate} from \"./isDate\";\nimport {isFunction} from \"./isFunction\";\nimport {isNil} from \"./isNil\";\nimport {isPrimitive} from \"./isPrimitive\";\nimport {isSymbol} from \"./isSymbol\";\n\nconst isBasicType = (source: any) => isNil(source) || isPrimitive(source) || isSymbol(source) || isFunction(source);\n\n/**\n * Return a cloned value\n * @param source\n */\nexport function deepClone(source: any): any {\n  let dest: any;\n\n  if (isBasicType(source)) {\n    return source;\n  }\n\n  if (isDate(source)) {\n    return new Date(source);\n  }\n\n  dest = isArray(source) ? [] : {};\n\n  for (const key in source) {\n    // Use getOwnPropertyDescriptor instead of source[key] to prevent from triggering setter/getter.\n    const descriptor = Object.getOwnPropertyDescriptor(source, key)!;\n\n    if (descriptor) {\n      if (!isFunction(descriptor.value)) {\n        dest[key] = deepClone(descriptor.value);\n      } else {\n        Object.defineProperty(dest, key, descriptor);\n      }\n    }\n  }\n\n  if (!isArray(source)) {\n    const prototype = Reflect.getPrototypeOf(source);\n    Reflect.setPrototypeOf(dest, prototype);\n  }\n\n  return dest;\n}\n","import {classOf} from \"./classOf\";\n\nexport function createInstance(obj: any) {\n  return obj ? (classOf(obj) !== Object ? Object.create(obj) : {}) : {};\n}\n","import {isProtectedKey} from \"./isProtectedKey\";\n\nexport function objectKeys(obj: any): string[] {\n  return Object.keys(obj).filter((key) => !isProtectedKey(key));\n}\n","import {createInstance} from \"./createInstance\";\nimport {isArrayOrArrayClass} from \"./isArray\";\nimport {isPrimitive} from \"./isPrimitive\";\nimport {objectKeys} from \"./objectKeys\";\n\nexport type DeepExtendsReducers = Record<string, (collection: any[], value: any) => any>;\n\nfunction reducer() {\n  return (collection: any[], value: any) => {\n    collection.indexOf(value) === -1 && collection.push(value);\n\n    return collection;\n  };\n}\n\n/**\n * Deep extends a model with another one.\n * @param out\n * @param obj\n * @param reducers\n * @returns {any}\n * @deprecated Since 2021-07-16. Use deepMerge instead of\n */\nexport function deepExtends(out: any, obj: any, reducers: DeepExtendsReducers = {}): any {\n  if (obj === undefined || obj === null) {\n    return out;\n  }\n\n  if (isPrimitive(obj) || typeof obj === \"symbol\" || typeof obj === \"function\") {\n    return obj;\n  }\n\n  if (isArrayOrArrayClass(obj)) {\n    out = out || [];\n  } else {\n    out = out || createInstance(obj);\n  }\n\n  const defaultReducer = reducers[\"default\"] ? reducers[\"default\"] : reducer();\n\n  const set = (key: string | number, value: any) => {\n    if (isArrayOrArrayClass(obj)) {\n      out.indexOf(value) === -1 && out.push(value);\n    } else {\n      out[key] = value;\n    }\n  };\n\n  objectKeys(obj).forEach((key) => {\n    let value = obj[key];\n\n    // istanbul ignore next\n    if (value === undefined || value === null) {\n      return;\n    }\n\n    // istanbul ignore next\n    if (value === \"\" && out[key] !== \"\") {\n      return;\n    }\n\n    if (isPrimitive(value) || typeof value === \"function\") {\n      set(key, value);\n\n      return;\n    }\n\n    if (isArrayOrArrayClass(value)) {\n      value = value.map((value: any) => deepExtends(undefined, value));\n\n      set(\n        key,\n        []\n          .concat(out[key] || [], value)\n          .reduce(\n            (collection: any[], value: any) => (reducers[key] ? reducers[key](collection, value) : defaultReducer(collection, value)),\n            []\n          )\n      );\n\n      return;\n    }\n\n    // Object\n    if (isArrayOrArrayClass(obj)) {\n      set(key, deepExtends(undefined, value, reducers));\n    } else {\n      set(key, deepExtends(out[key], value, reducers));\n    }\n  });\n\n  if (isArrayOrArrayClass(out)) {\n    out.reduce((collection: any[], value: any) => defaultReducer(collection, value), []);\n  }\n\n  return out;\n}\n","import {createInstance} from \"./createInstance\";\nimport {isFunction} from \"./isFunction\";\nimport {isPrimitive} from \"./isPrimitive\";\nimport {isSymbol} from \"./isSymbol\";\nimport {objectKeys} from \"./objectKeys\";\n\nexport type DeepMergeReducerCB = (collection: any[], value: any, options?: DeepMergeOptions) => any;\nexport type DeepMergeComparatorCB = (item: any, ref: any) => boolean;\n\nexport interface DeepMergeOptions {\n  reducers?: Record<string, DeepMergeReducerCB>;\n  parentKey?: string;\n  cleanUndefinedProps?: boolean;\n}\n\nexport function mergeReducerBuilder(cb: DeepMergeComparatorCB) {\n  return (collection: any[], value: any, options: DeepMergeOptions) => {\n    const index = collection.findIndex((item) => cb(item, value));\n\n    if (index === -1) {\n      return [...collection, value];\n    }\n\n    collection[index] = deepMerge(collection[index], value, options);\n\n    return collection;\n  };\n}\n\nconst defaultReducer = mergeReducerBuilder((a, b) => a === b);\n\nfunction getReducer({reducers, parentKey}: DeepMergeOptions) {\n  if (!reducers) {\n    return defaultReducer;\n  }\n\n  if (parentKey && reducers[parentKey]) {\n    return reducers[parentKey];\n  }\n\n  return reducers[\"default\"] || defaultReducer;\n}\n\nfunction shouldReturnObj(obj: any, source: any) {\n  return isPrimitive(obj) || isSymbol(obj) || isFunction(obj) || source === undefined;\n}\n\nfunction shouldReturnSource(obj: any, source: any) {\n  return obj === undefined || obj === null || (obj === \"\" && source !== \"\");\n}\n\nexport function deepMerge<T extends any = any, C extends any = any>(\n  source: T & any,\n  obj: C & any,\n  options: DeepMergeOptions = {}\n): (T & C) | undefined | null {\n  if (shouldReturnSource(obj, source)) {\n    return source as any;\n  }\n\n  if (shouldReturnObj(obj, source)) {\n    return obj;\n  }\n\n  if (Array.isArray(source)) {\n    const reducer = getReducer(options);\n\n    return [].concat(obj).reduce((out: any[], value: any) => reducer(out, value, options), [...source]);\n  }\n\n  return [...objectKeys(source), ...objectKeys(obj)].reduce((out: any, key: string) => {\n    const src = source && source[key];\n    const value = deepMerge(src, obj && obj[key], {\n      ...options,\n      parentKey: key\n    });\n\n    if (options.cleanUndefinedProps && value === undefined) {\n      return out;\n    }\n\n    return {\n      ...out,\n      [key]: value\n    };\n  }, createInstance(source));\n}\n","import {isFunction} from \"./isFunction\";\n\nexport function isArrowFn(target: any) {\n  return target && isFunction(target) && !target.prototype;\n}\n","import {classOf} from \"./classOf\";\n\n/**\n *\n * @param target\n * @returns {boolean}\n */\nexport function isClassObject(target: any): target is Object {\n  return target === Object;\n}\n\nexport function isPlainObject(target: any): boolean {\n  return isClassObject(classOf(target));\n}\n","/**\n * Tests to see if the object is an ES2015 (ES6) Promise\n * @see {@link https://www.ecma-international.org/ecma-262/6.0/#sec-promise-objects}\n * @param target\n * @returns {boolean}\n */\nexport function isPromise<T = any>(target: any): target is Promise<T> {\n  return (\n    target === Promise ||\n    target instanceof Promise ||\n    (!!target && typeof target.subscribe !== \"function\" && typeof target.then === \"function\")\n  );\n}\n","import {isArrayOrArrayClass} from \"./isArray\";\nimport {isArrowFn} from \"./isArrowFn\";\nimport {isDate} from \"./isDate\";\nimport {isClassObject} from \"./isPlainObject\";\nimport {isPrimitiveOrPrimitiveClass} from \"./isPrimitive\";\nimport {isPromise} from \"./isPromise\";\nimport {isSymbol} from \"./isSymbol\";\n\nexport function isClass(target: any) {\n  if (!target) {\n    return false;\n  }\n\n  if (isArrowFn(target)) {\n    return false;\n  }\n\n  return !(\n    isSymbol(target) ||\n    isPrimitiveOrPrimitiveClass(target) ||\n    isClassObject(target) ||\n    isDate(target) ||\n    isPromise(target) ||\n    isArrayOrArrayClass(target)\n  );\n}\n","import {classOf} from \"./classOf\";\nimport {isClass} from \"./isClass\";\n\nexport function getClassOrSymbol(target: any): any {\n  return isClass(target) ? classOf(target) : target;\n}\n","import {constructorOf} from \"./constructorOf\";\n\nexport function toStringConstructor(target: any): string {\n  const ctr = constructorOf(target);\n  const strings = ctr.toString().split(\"\\n\");\n  const ctrString = strings.find((s) => s.indexOf(\"constructor(\") > -1) || \"constructor()\";\n\n  return `${ctrString.replace(\"{\", \"\").trim()}`;\n}\n","import {toStringConstructor} from \"./toStringConstructor\";\n\nexport function getConstructorArgNames(target: any) {\n  return toStringConstructor(target).replace(\"constructor(\", \"\").replace(\")\", \"\").split(\", \").filter(Boolean);\n}\n","import {inheritedDescriptorOf} from \"../decorators/inheritedDescriptorOf\";\nimport {classOf} from \"./classOf\";\n\n/**\n *\n * @param obj\n * @param key\n */\nexport function isEnumerable(obj: any, key: string) {\n  const klass = classOf(obj);\n\n  if (klass) {\n    const descriptor = inheritedDescriptorOf(klass, key);\n\n    if (descriptor) {\n      return descriptor.enumerable;\n    }\n  }\n\n  return Object.prototype.propertyIsEnumerable.call(obj, key);\n}\n","import {isEnumerable} from \"./isEnumerable\";\nimport {isProtectedKey} from \"./isProtectedKey\";\n\n/**\n * Return all enumerable keys of the given object\n * @param obj\n */\nexport function getEnumerableKeys(obj: any) {\n  const keys: string[] = [];\n\n  for (const key in obj) {\n    if (!isProtectedKey(key) && isEnumerable(obj, key)) {\n      keys.push(key);\n    }\n  }\n\n  return keys;\n}\n","export function isObject(target: any): target is object {\n  return typeof target === \"object\";\n}\n","import {isFunction} from \"./isFunction\";\nimport {isObject} from \"./isObject\";\nimport {isString} from \"./isString\";\n\nconst mapOptions = (args: any[]) => {\n  const [expression, scope, defaultValue, separator = \".\"] = args;\n\n  if (isObject(scope) || isString(expression)) {\n    return {\n      expression,\n      scope,\n      defaultValue,\n      separator\n    };\n  }\n\n  return {\n    expression: scope,\n    scope: expression,\n    defaultValue,\n    separator\n  };\n};\n\n/**\n * Get value from scope\n * @param {string} expression\n * @param scope\n * @returns {any}\n */\nexport function getValue<T = any>(scope: any, expression: string | undefined): T | undefined;\n/**\n * Get value from scope\n * @param {string} expression\n * @param scope\n * @param defaultValue\n * @param separator\n * @returns {any}\n */\nexport function getValue<T = any>(scope: any, expression: string | undefined, defaultValue: T, separator?: string): T;\n/**\n * Get value from scope\n * @param {string} expression\n * @param scope\n * @returns {any}\n */\nexport function getValue<T = any>(expression: string | undefined, scope: any): T | undefined;\n/**\n * Get value from scope\n * @param {string} expression\n * @param scope\n * @param defaultValue\n * @param separator\n * @returns {any}\n */\nexport function getValue<T = any>(expression: string | undefined, scope: any, defaultValue: T, separator?: string): T;\nexport function getValue(...args: any[]) {\n  const options = mapOptions(args);\n  let scope = options.scope;\n  const {expression, defaultValue, separator} = options;\n\n  if (!expression) {\n    return scope;\n  }\n\n  if (!scope) {\n    return defaultValue;\n  }\n\n  const keys: string[] = expression.split(separator);\n\n  const getValue = (key: string) => {\n    if (scope instanceof Map || isFunction(scope.get)) {\n      return scope[key] || scope.get(key);\n    }\n    return scope[key];\n  };\n\n  while ((scope = getValue(keys.shift()!)) && keys.length) {}\n\n  return scope === undefined ? defaultValue : scope;\n}\n","import {isArrayOrArrayClass} from \"./isArray\";\n\n/**\n * Return true if the target.\n * @param target\n * @returns {boolean}\n */\nexport function isCollection(target: any): boolean {\n  return (\n    isArrayOrArrayClass(target) ||\n    target === Map ||\n    target instanceof Map ||\n    target === Set ||\n    target instanceof Set ||\n    target === WeakMap ||\n    target instanceof WeakMap ||\n    target === WeakSet ||\n    target instanceof WeakSet\n  );\n}\n","import {isNil} from \"./isNil\";\n\n/**\n * Return true if the value is an empty string, null or undefined.\n * @param value\n * @returns {boolean}\n */\nexport function isEmpty(value: any): boolean {\n  return value === \"\" || isNil(value);\n}\n","import {classOf} from \"./classOf\";\nimport {getInheritedClass} from \"./getInheritedClass\";\nimport {nameOf} from \"./nameOf\";\n\nexport function isInheritedFrom(target: any, from: any, deep = 5): boolean {\n  if (!target || !from) {\n    return false;\n  }\n\n  target = classOf(target);\n  from = classOf(from);\n\n  while (nameOf(target) !== \"\") {\n    if (!deep) {\n      return false;\n    }\n    if (target === from) {\n      return true;\n    }\n\n    target = getInheritedClass(target);\n    deep--;\n  }\n\n  return false;\n}\n","export function isObservable<T>(obj: any): boolean {\n  return !!obj && typeof obj.lift === \"function\" && typeof obj.subscribe === \"function\";\n}\n","export function isStream(obj: any): boolean {\n  return obj !== null && typeof obj === \"object\" && typeof obj.pipe === \"function\";\n}\n","import {isBoolean, isBooleanOrBooleanClass} from \"./isBoolean\";\nimport {isNumber, isNumberOrNumberClass} from \"./isNumber\";\nimport {isString, isStringOrStringClass} from \"./isString\";\n\nexport function primitiveOf(target: any): \"string\" | \"number\" | \"boolean\" | \"any\" {\n  if (isStringOrStringClass(target)) {\n    return \"string\";\n  }\n\n  if (isNumberOrNumberClass(target)) {\n    return \"number\";\n  }\n\n  if (isBooleanOrBooleanClass(target)) {\n    return \"boolean\";\n  }\n\n  return \"any\";\n}\n","import {isProtectedKey} from \"./isProtectedKey\";\n\nexport function setValue(scope: any, expression: string, value: any, separator = \".\") {\n  const keys: string[] = expression.split(separator);\n\n  const setValue = (key: string, add: boolean) => {\n    if (isProtectedKey(key)) {\n      return false;\n    }\n\n    if (add) {\n      if (typeof scope.set === \"function\") {\n        scope.set(key, value);\n      } else {\n        scope[key] = value;\n      }\n\n      return false;\n    }\n\n    if (typeof scope.set === \"function\") {\n      if (!scope.has(key)) {\n        scope.set(key, {});\n      }\n\n      scope = scope.get(key);\n    } else {\n      scope = scope[key] = scope[key] || {};\n    }\n\n    return true;\n  };\n\n  while (setValue(keys.shift()!, !keys.length)) {}\n}\n","import {isArray} from \"./isArray\";\nimport {isString} from \"./isString\";\n\nexport type ToMapIdentityCB<V> = (item: V, index: string | number) => string | string[];\nexport type ToMapIdentity<V> = string | ToMapIdentityCB<V>;\n\nfunction createIdentityFn<V>(keyOrFn?: ToMapIdentity<V>): ToMapIdentityCB<V> {\n  if (!keyOrFn) {\n    return (v, k) => String(k);\n  }\n\n  if (isString(keyOrFn)) {\n    return (item: any) => {\n      return item[keyOrFn as string];\n    };\n  }\n\n  return keyOrFn;\n}\n\nexport function toMap<K extends keyof any = any, V = any>(input: Record<K, V> | V[], keyOrFn?: ToMapIdentity<V>): Map<K, V> {\n  if (isArray<V>(input)) {\n    const identity = createIdentityFn<V>(keyOrFn || \"id\");\n    return input.reduce((map, value, index) => {\n      const ids = ([] as string[]).concat(identity(value, index));\n\n      ids.forEach((id) => map.set(id, value));\n\n      return map;\n    }, new Map());\n  }\n\n  const identity = createIdentityFn<V>(keyOrFn);\n\n  return Object.entries(input).reduce((map, [key, value]) => {\n    return map.set(identity(value as V, key), value);\n  }, new Map());\n}\n","import {join} from \"path\";\nimport {isArray} from \"../objects/isArray\";\nimport {isString} from \"../objects/isString\";\n\nconst fixPath = require(\"normalize-path\");\n\nexport function normalizePath(item: string, ...paths: string[]): string;\nexport function normalizePath(item: (string | any)[]): (string | any)[];\nexport function normalizePath(item: any, ...paths: string[]) {\n  if (isString(item)) {\n    const path = join(item, ...paths);\n    return fixPath(path);\n  }\n\n  if (isArray(item)) {\n    return item.map((item: any) => normalizePath(item));\n  }\n\n  return item;\n}\n","import {Type} from \"./Type\";\nimport {classOf, decoratorTypeOf, isArrayOrArrayClass, isClass, isDate, isObject, isPrimitiveOrPrimitiveClass, nameOf} from \"../utils\";\nimport {DecoratorTypes} from \"./DecoratorTypes\";\n\nexport interface EntityOptions {\n  target: Type<any>;\n  propertyKey?: string | symbol;\n  index?: number;\n  descriptor?: any;\n  type?: Type<any>;\n  collectionType?: Type<any>;\n\n  [key: string]: any;\n}\n\nexport abstract class Entity {\n  /**\n   * Original property key decorated by the decorator\n   */\n  readonly propertyKey: string | symbol;\n  /**\n   * Alias of the property\n   */\n  readonly propertyName: string;\n  /**\n   * Parameter index\n   */\n  readonly index: number;\n  /**\n   * Method's descriptor\n   */\n  readonly descriptor: number;\n  /**\n   * Decorator type used to declare the JsonSchemaStore.\n   */\n  readonly decoratorType: DecoratorTypes;\n  /**\n   * Type of the collection (Array, Map, Set, etc...)\n   */\n  public collectionType: Type<any>;\n  public token: Type<any>;\n  /**\n   *\n   */\n  protected _type: Type<any>;\n  protected _target: Type<any>;\n\n  protected constructor({target, propertyKey, descriptor, index}: EntityOptions) {\n    this._target = target;\n    this.propertyKey = propertyKey!;\n    this.propertyName = String(propertyKey);\n    this.descriptor = descriptor;\n    this.index = index!;\n    this.decoratorType = decoratorTypeOf([target, propertyKey, descriptor || index]);\n    this.token = target && classOf(target);\n  }\n\n  /**\n   * Reference to the class\n   */\n  get target() {\n    return this._target;\n  }\n\n  /**\n   * Return the class name of the entity.\n   * @returns {string}\n   */\n  get targetName(): string {\n    return nameOf(this.token);\n  }\n\n  /**\n   *\n   * @returns {Type<any>}\n   */\n  get type(): Type<any> | any {\n    return this._type;\n  }\n\n  /**\n   * Get original type without transformation\n   * @param value\n   */\n  set type(value: Type<any> | any) {\n    this._type = value;\n  }\n\n  /**\n   * Return the itemSchema target type. if the type is a function used for recursive model, the function will be called to\n   * get the right type.\n   */\n  get computedType() {\n    return this._type;\n  }\n\n  /**\n   *\n   * @returns {boolean}\n   */\n  get isCollection(): boolean {\n    return !!this.collectionType;\n  }\n\n  /**\n   *\n   * @returns {boolean}\n   */\n  get isArray() {\n    return isArrayOrArrayClass(this.collectionType);\n  }\n\n  /**\n   *\n   * @returns {boolean}\n   */\n  get isPrimitive() {\n    return isPrimitiveOrPrimitiveClass(this._type);\n  }\n\n  /**\n   *\n   * @returns {boolean}\n   */\n  get isDate() {\n    return isDate(this.computedType);\n  }\n\n  /**\n   *\n   * @returns {boolean}\n   */\n  get isObject() {\n    return isObject(this.computedType);\n  }\n\n  /**\n   *\n   */\n  get isClass() {\n    return isClass(this.computedType);\n  }\n}\n","/**\n *\n */\nexport enum Env {\n  PROD = \"production\",\n  DEV = \"development\",\n  TEST = \"test\"\n}\n\n/**\n * Fallback\n * @type {Env}\n */\n// tslint:disable-next-line: variable-name\nexport const EnvTypes = Env;\n","export class Hooks {\n  private listeners: Map<string, Function[]> = new Map();\n\n  /**\n   * Listen a hook event\n   * @param event\n   * @param cb\n   */\n  on(event: string, cb: Function) {\n    if (!this.listeners.has(event)) {\n      this.listeners.set(event, []);\n    }\n\n    this.listeners.get(event)!.push(cb);\n\n    return this;\n  }\n\n  /**\n   * Remove a listener attached to an event\n   * @param event\n   * @param cb\n   */\n  off(event: string, cb: Function) {\n    if (this.listeners.has(event)) {\n      this.listeners.set(\n        event,\n        this.listeners.get(event)!.filter((item) => item === cb)\n      );\n    }\n\n    return this;\n  }\n\n  /**\n   * Trigger an event and call listener.\n   * @param event\n   * @param args\n   * @param callThis\n   */\n  emit(event: string, args: any[] = [], callThis: any = null): void {\n    if (this.listeners.has(event)) {\n      for (const cb of this.listeners.get(event)!) {\n        cb.call(callThis, ...args);\n      }\n    }\n  }\n\n  /**\n   * Trigger an event, listener alter given value and return it.\n   * @param event\n   * @param value\n   * @param args\n   * @param callThis\n   */\n  alter(event: string, value: any, args: any[] = [], callThis: any = null): any {\n    if (this.listeners.has(event)) {\n      for (const cb of this.listeners.get(event)!) {\n        value = cb.call(callThis, value, ...args);\n      }\n    }\n\n    return value;\n  }\n\n  /**\n   * Trigger an event and call async listener.\n   * @param event\n   * @param args\n   * @param callThis\n   */\n  async asyncEmit(event: string, args: any[] = [], callThis: any = null): Promise<void> {\n    if (this.listeners.has(event)) {\n      for (const cb of this.listeners.get(event)!) {\n        await cb.call(callThis, ...args);\n      }\n    }\n  }\n\n  /**\n   * Trigger an event, async listener alter given value and return it.\n   * @param event\n   * @param value\n   * @param args\n   * @param callThis\n   */\n  async asyncAlter(event: string, value: any, args: string[] = [], callThis: any = null): Promise<any> {\n    if (this.listeners.has(event)) {\n      for (const cb of this.listeners.get(event)!) {\n        value = await cb.call(callThis, value, ...args);\n      }\n    }\n\n    return value;\n  }\n}\n","import \"reflect-metadata\";\nimport {classOf} from \"../utils\";\n\n/**\n * Metadata key\n * @private\n * @type {string}\n */\nconst DESIGN_PARAM_TYPES = \"design:paramtypes\";\n/**\n * Metadata key\n * @private\n * @type {string}\n */\nconst DESIGN_TYPE = \"design:type\";\n/**\n * Metadata key\n * @private\n * @type {string}\n */\nconst DESIGN_RETURN_TYPE = \"design:returntype\";\n\n/**\n * Properties collections\n * @private\n * @type {string}\n */\nconst PROPERTIES: Map<string | symbol, any[]> = new Map<string | symbol, any[]>();\n\n/**\n * @stable\n */\nexport class Metadata {\n  /**\n   * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n   * @param key A key used to store and retrieve metadata.\n   * @param target The target object on which the metadata is defined.\n   * @param propertyKey The property key for the target.\n   * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n   * @example\n   *\n   * ```typescript\n   * class Example {\n   *     // property declarations are not part of ES6, though they are valid in TypeScript:\n   *     // static staticProperty;\n   *     // property;\n   *\n   *     static staticMethod(p) { }\n   *     method(p) { }\n   * }\n   *\n   * // constructor\n   * result = Metadata.get(\"custom:annotation\", Example);\n   *\n   * // property (on constructor)\n   * result = Metadata.get(\"custom:annotation\", Example, \"staticProperty\");\n   *\n   * // property (on prototype)\n   * result = Metadata.get(\"custom:annotation\", Example.prototype, \"property\");\n   *\n   * // method (on constructor)\n   * result = Metadata.get(\"custom:annotation\", Example, \"staticMethod\");\n   *\n   * // method (on prototype)\n   * result = Metadata.get(\"custom:annotation\", Example.prototype, \"method\");\n   * ```\n   *\n   */\n  static get(key: string, target: any, propertyKey?: string | symbol): any {\n    return Reflect.getMetadata(key, classOf(target), propertyKey!);\n  }\n\n  /**\n   * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n   * @param key A key used to store and retrieve metadata.\n   * @param target The target object on which the metadata is defined.\n   * @param propertyKey The property key for the target.\n   * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n   * @example\n   *\n   * ```typescript\n   * class Example {\n   *     // property declarations are not part of ES6, though they are valid in TypeScript:\n   *     // static staticProperty;\n   *     // property;\n   *\n   *     static staticMethod(p) { }\n   *     method(p) { }\n   * }\n   *\n   * // constructor\n   * result = Metadata.getOwn(\"custom:annotation\", Example);\n   *\n   * // property (on constructor)\n   * result = Metadata.getOwn(\"custom:annotation\", Example, \"staticProperty\");\n   *\n   * // property (on prototype)\n   * result = Metadata.getOwn(\"custom:annotation\", Example.prototype, \"property\");\n   *\n   * // method (on constructor)\n   * result = Metadata.getOwn(\"custom:annotation\", Example, \"staticMethod\");\n   *\n   * // method (on prototype)\n   * result = Metadata.getOwn(\"custom:annotation\", Example.prototype, \"method\");\n   * ```\n   *\n   */\n  static getOwn(key: string, target: any, propertyKey?: string | symbol): any {\n    return Reflect.getOwnMetadata(key, classOf(target), propertyKey!);\n  }\n\n  /**\n   * Gets the metadata value for the provided metadata DESIGN_TYPE on the target object or its prototype chain.\n   * @param target The target object on which the metadata is defined.\n   * @param propertyKey The property key for the target.\n   * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n   * @example\n   *\n   * ```typescript\n   * class Example {\n   *     // property declarations are not part of ES6, though they are valid in TypeScript:\n   *     // static staticProperty;\n   *     // property;\n   *\n   *     static staticMethod(p) { }\n   *     method(p) { }\n   * }\n   *\n   * // on contructor\n   * result = Metadata.getType(Example);\n   *\n   * // property (on constructor)\n   * result = Metadata.getType(Example, \"staticProperty\");\n   *\n   * // method (on constructor)\n   * result = Metadata.getType(Example, \"staticMethod\");\n   * ```\n   *\n   */\n  static getType(target: any, propertyKey?: string | symbol): any {\n    return Reflect.getMetadata(DESIGN_TYPE, target, propertyKey!);\n  }\n\n  /**\n   * Gets the metadata value for the provided metadata DESIGN_TYPE on the target object or its prototype chain.\n   * @param target The target object on which the metadata is defined.\n   * @param propertyKey The property key for the target.\n   * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n   * @example\n   *\n   * ```typescript\n   * class Example {\n   *     // property declarations are not part of ES6, though they are valid in TypeScript:\n   *     // static staticProperty;\n   *     // property;\n   *\n   *     static staticMethod(p) { }\n   *     method(p) { }\n   * }\n   *\n   * // on contructor\n   * result = Metadata.getOwnType(Example);\n   *\n   * // property (on constructor)\n   * result = Metadata.getOwnType(Example, \"staticProperty\");\n   *\n   * // method (on constructor)\n   * result = Metadata.getOwnType(Example, \"staticMethod\");\n   * ```\n   *\n   */\n  static getOwnType(target: any, propertyKey?: string | symbol): any {\n    return Reflect.getMetadata(DESIGN_TYPE, target, propertyKey!);\n  }\n\n  /**\n   * Gets the metadata value for the provided metadata DESIGN_RETURN_TYPE on the target object or its prototype chain.\n   * @param target The target object on which the metadata is defined.\n   * @param propertyKey The property key for the target.\n   * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n   * @example\n   *\n   * ```typescript\n   * class Example {\n   *     // property declarations are not part of ES6, though they are valid in TypeScript:\n   *     // static staticProperty;\n   *     // property;\n   *\n   *     static staticMethod(p) { }\n   *     method(p) { }\n   * }\n   *\n   * // on contructor\n   * result = Metadata.getReturnType(Example);\n   *\n   * // property (on constructor)\n   * result = Metadata.getReturnType(Example, \"staticProperty\");\n   *\n   * // method (on constructor)\n   * result = Metadata.getReturnType(Example, \"staticMethod\");\n   * ```\n   *\n   */\n  static getReturnType(target: any, propertyKey?: string | symbol): any {\n    return Reflect.getMetadata(DESIGN_RETURN_TYPE, target, propertyKey!);\n  }\n\n  /**\n   * Gets the metadata value for the provided metadata DESIGN_RETURN_TYPE on the target object or its prototype chain.\n   * @param target The target object on which the metadata is defined.\n   * @param propertyKey The property key for the target.\n   * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n   * @example\n   *\n   * ```typescript\n   * class Example {\n   *     // property declarations are not part of ES6, though they are valid in TypeScript:\n   *     // static staticProperty;\n   *     // property;\n   *\n   *     static staticMethod(p) { }\n   *     method(p) { }\n   * }\n   *\n   * // on contructor\n   * result = Metadata.getOwnReturnType(Example);\n   *\n   * // property (on constructor)\n   * result = Metadata.getOwnReturnType(Example, \"staticProperty\");\n   *\n   * // method (on constructor)\n   * result = Metadata.getOwnReturnType(Example, \"staticMethod\");\n   * ```\n   *\n   */\n  static getOwnReturnType(target: any, propertyKey?: string | symbol): any {\n    return Reflect.getOwnMetadata(DESIGN_RETURN_TYPE, target, propertyKey!);\n  }\n\n  /**\n   * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n   * @param key A key used to store and retrieve metadata.\n   * @param target The target object on which the metadata is defined.\n   * @param propertyKey The property key for the target.\n   * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n   * @example\n   *\n   * ```typescript\n   * class Example {\n   *     // property declarations are not part of ES6, though they are valid in TypeScript:\n   *     // static staticProperty;\n   *     // property;\n   *\n   *     static staticMethod(p) { }\n   *     method(p) { }\n   * }\n   *\n   * // constructor\n   * result = Metadata.has(\"custom:annotation\", Example);\n   *\n   * // property (on constructor)\n   * result = Metadata.has(\"custom:annotation\", Example, \"staticProperty\");\n   *\n   * // property (on prototype)\n   * result = Metadata.has(\"custom:annotation\", Example.prototype, \"property\");\n   *\n   * // method (on constructor)\n   * result = Metadata.has(\"custom:annotation\", Example, \"staticMethod\");\n   *\n   * // method (on prototype)\n   * result = Metadata.has(\"custom:annotation\", Example.prototype, \"method\");\n   * ```\n   *\n   */\n  static has(key: string, target: any, propertyKey?: string | symbol): boolean {\n    try {\n      return Reflect.hasMetadata(key, classOf(target), propertyKey!);\n    } catch (er) {}\n\n    return false;\n  }\n\n  /**\n   * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n   * @param key A key used to store and retrieve metadata.\n   * @param target The target object on which the metadata is defined.\n   * @param propertyKey The property key for the target.\n   * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n   * @example\n   *\n   * ```typescript\n   * class Example {\n   *     // property declarations are not part of ES6, though they are valid in TypeScript:\n   *     // static staticProperty;\n   *     // property;\n   *\n   *     static staticMethod(p) { }\n   *     method(p) { }\n   * }\n   *\n   * // constructor\n   * result = Metadata.has(\"custom:annotation\", Example);\n   *\n   * // property (on constructor)\n   * result = Metadata.hasOwn(\"custom:annotation\", Example, \"staticProperty\");\n   *\n   * // property (on prototype)\n   * result = Metadata.hasOwn(\"custom:annotation\", Example.prototype, \"property\");\n   *\n   * // method (on constructor)\n   * result = Metadata.hasOwn(\"custom:annotation\", Example, \"staticMethod\");\n   *\n   * // method (on prototype)\n   * result = Metadata.hasOwn(\"custom:annotation\", Example.prototype, \"method\");\n   * ```\n   *\n   */\n  static hasOwn(key: string, target: any, propertyKey?: string | symbol): boolean {\n    return Reflect.hasOwnMetadata(key, classOf(target), propertyKey!);\n  }\n\n  /**\n   * Deletes the metadata entry from the target object with the provided key.\n   * @param key A key used to store and retrieve metadata.\n   * @param target The target object on which the metadata is defined.\n   * @param propertyKey The property key for the target.\n   * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n   * @example\n   *\n   * ```typescript\n   * class Example {\n   *     // property declarations are not part of ES6, though they are valid in TypeScript:\n   *     // static staticProperty;\n   *     // property;\n   *\n   *     static staticMethod(p) { }\n   *     method(p) { }\n   * }\n   *\n   * // constructor\n   * result = Metadata.delete(\"custom:annotation\", Example);\n   *\n   * // property (on constructor)\n   * result = Metadata.delete(\"custom:annotation\", Example, \"staticProperty\");\n   *\n   * // property (on prototype)\n   * result = Metadata.delete(\"custom:annotation\", Example.prototype, \"property\");\n   *\n   * // method (on constructor)\n   * result = Metadata.delete(\"custom:annotation\", Example, \"staticMethod\");\n   *\n   * // method (on prototype)\n   * result = Metadata.delete(\"custom:annotation\", Example.prototype, \"method\");\n   * ```\n   *\n   */\n  static delete(key: string, target: any, propertyKey?: string | symbol): boolean {\n    return Reflect.deleteMetadata(key, classOf(target), propertyKey!);\n  }\n\n  /**\n   * Set the metadata value for the provided metadata DESIGN_PARAM_TYPES on the target object or its prototype chain.\n   * @param target The target object on which the metadata is defined.\n   * @param propertyKey The property key for the target.\n   * @param value A value that contains attached metadata.\n   * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n   * @example\n   *\n   * ```typescript\n   * class Example {\n   *     // property declarations are not part of ES6, though they are valid in TypeScript:\n   *     // static staticProperty;\n   *     // property;\n   *\n   *     static staticMethod(p) { }\n   *     method(p) { }\n   * }\n   *\n   * // on contructor\n   * result = Metadata.setParamTypes(Example, undefined, [Object]);\n   *\n   * // property (on constructor)\n   * result = Metadata.setParamTypes(Example, \"staticProperty\", [Object]);\n   *\n   * // property (on prototype)\n   * result = Metadata.setParamTypes(Example.prototype, \"property\", [Object]);\n   *\n   * // method (on constructor)\n   * result = Metadata.setParamTypes(Example, \"staticMethod\", [Object]);\n   *\n   * // method (on prototype)\n   * result = Metadata.setParamTypes(Example.prototype, \"method\", [Object]);\n   * ```\n   *\n   */\n  static setParamTypes(target: any, propertyKey: string | symbol, value: any): void {\n    return this.set(DESIGN_PARAM_TYPES, value, target.prototype, propertyKey);\n  }\n\n  /**\n   * Get all metadata for a metadataKey.\n   * @param metadataKey\n   */\n  static getTargetsFromPropertyKey = (metadataKey: string | symbol): any[] =>\n    PROPERTIES.has(metadataKey) ? PROPERTIES.get(metadataKey) || [] : [];\n\n  /**\n   * Define a unique metadata entry on the target.\n   * @param key A key used to store and retrieve metadata.\n   * @param value A value that contains attached metadata.\n   * @param target The target object on which to define metadata.\n   * @param propertyKey The property key for the target.\n   * @example\n   *\n   * ```typescript\n   * class Example {\n   *     // property declarations are not part of ES6, though they are valid in TypeScript:\n   *     // static staticProperty;\n   *     // property;\n   *\n   *     static staticMethod(p) { }\n   *     method(p) { }\n   * }\n   *\n   * // constructor\n   * Reflect.defineMetadata(\"custom:annotation\", options, Example);\n   *\n   * // property (on constructor)\n   * Reflect.defineMetadata(\"custom:annotation\", Number, Example, \"staticProperty\");\n   *\n   * // property (on prototype)\n   * Reflect.defineMetadata(\"custom:annotation\", Number, Example.prototype, \"property\");\n   *\n   * // method (on constructor)\n   * Reflect.defineMetadata(\"custom:annotation\", Number, Example, \"staticMethod\");\n   *\n   * // method (on prototype)\n   * Reflect.defineMetadata(\"custom:annotation\", Number, Example.prototype, \"method\");\n   *\n   * // decorator factory as metadata-producing annotation.\n   * function MyAnnotation(options): PropertyDecorator {\n   *     return (target, key) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\n   * }\n   * ```\n   *\n   */\n  static set(key: string, value: any, target: any, propertyKey?: string | symbol): void {\n    const targets: any[] = PROPERTIES.has(key) ? PROPERTIES.get(key) || [] : [];\n    const classConstructor = classOf(target);\n\n    if (targets.indexOf(classConstructor) === -1) {\n      targets.push(classConstructor);\n      PROPERTIES.set(key, targets);\n    }\n\n    Reflect.defineMetadata(key, value, classOf(target), propertyKey!);\n  }\n\n  /**\n   * Gets the metadata value for the provided metadata DESIGN_PARAM_TYPES on the target object or its prototype chain.\n   * @param targetPrototype\n   * @param propertyKey The property key for the target.\n   * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n   * @example\n   *\n   * ```typescript\n   * class Example {\n   *     // property declarations are not part of ES6, though they are valid in TypeScript:\n   *     // static staticProperty;\n   *     // property;\n   *\n   *     static staticMethod(p) { }\n   *     method(p) { }\n   * }\n   *\n   * // on contructor\n   * result = Metadata.getParamTypes(Example.prototype);\n   *\n   * // property (on constructor)\n   * result = Metadata.getParamTypes(Example.prototype, \"staticProperty\");\n   *\n   * // method (on constructor)\n   * result = Metadata.getParamTypes(Example.prototype, \"staticMethod\");\n   * ```\n   *\n   */\n  static getParamTypes(targetPrototype: any, propertyKey?: string | symbol): any[] {\n    return Reflect.getMetadata(DESIGN_PARAM_TYPES, targetPrototype, propertyKey!) || [];\n  }\n\n  /**\n   * Gets the metadata value for the provided metadata DESIGN_PARAM_TYPES on the target object or its prototype chain.\n   * @param target The target object on which the metadata is defined.\n   * @param propertyKey The property key for the target.\n   * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n   * @example\n   *\n   * ```typescript\n   * class Example {\n   *     // property declarations are not part of ES6, though they are valid in TypeScript:\n   *     // static staticProperty;\n   *     // property;\n   *\n   *     static staticMethod(p) { }\n   *     method(p) { }\n   * }\n   *\n   * // on contructor\n   * result = Metadata.getParamTypes(Example);\n   *\n   * // property (on constructor)\n   * result = Metadata.getParamTypes(Example, \"staticProperty\");\n   *\n   * // method (on constructor)\n   * result = Metadata.getParamTypes(Example, \"staticMethod\");\n   * ```\n   *\n   */\n  static getOwnParamTypes(target: any, propertyKey?: string | symbol): any[] {\n    return Reflect.getOwnMetadata(DESIGN_PARAM_TYPES, target, propertyKey!) || [];\n  }\n}\n","import {DecoratorTypes} from \"../domain/DecoratorTypes\";\nimport {decoratorTypeOf, deepClone, deepMerge, descriptorOf, isSymbol, nameOf} from \"../utils\";\nimport {Metadata} from \"./Metadata\";\n\n/**\n * @ignore\n */\nexport const CLASS_STORE = \"tsed:class:store\";\n/**\n * @ignore\n */\nexport const METHOD_STORE = \"tsed:method:store\";\n/**\n * @ignore\n */\nexport const PROPERTY_STORE = \"tsed:property:store\";\n/**\n * @ignore\n */\nexport const PARAM_STORE = \"tsed:param:store\";\n\nconst stores = new Map<symbol, Store>();\n\nfunction storeGet(key: string, ...args: any[]): Store {\n  if (isSymbol(args[0])) {\n    if (!stores.has(args[0])) {\n      stores.set(args[0], new Store());\n    }\n\n    return stores.get(args[0])!;\n  } else {\n    const registry = Metadata as any;\n\n    if (!registry.hasOwn(key, ...args)) {\n      registry.set(key, new Store(), ...args);\n    }\n\n    return registry.getOwn(key, ...args);\n  }\n}\n\nfunction defineStore(args: any[]): Store {\n  const [target, propertyKey, descriptor] = args;\n\n  switch (decoratorTypeOf(args)) {\n    case DecoratorTypes.PARAM_CTOR:\n    case DecoratorTypes.PARAM_STC:\n    case DecoratorTypes.PARAM:\n      const store = storeGet(PARAM_STORE, target, propertyKey);\n      if (!store.has(\"\" + descriptor)) {\n        store.set(\"\" + descriptor, new Store());\n      }\n\n      return store.get(\"\" + descriptor);\n    case DecoratorTypes.PROP:\n    case DecoratorTypes.PROP_STC:\n      return storeGet(PROPERTY_STORE, target, propertyKey);\n    case DecoratorTypes.METHOD:\n    case DecoratorTypes.METHOD_STC:\n      return storeGet(METHOD_STORE, target, propertyKey);\n    case DecoratorTypes.CLASS:\n      return storeGet(CLASS_STORE, target);\n  }\n}\n\nexport class Store {\n  #entries = new Map<string, any>();\n\n  /**\n   * Create or get a Store from args {target + methodName + descriptor}\n   * @param args\n   * @returns {Store}\n   */\n  static from(...args: any[]): Store {\n    return defineStore(args);\n  }\n\n  /**\n   * Create store on the method.\n   * @param target\n   * @param {string} propertyKey\n   * @returns {Store}\n   */\n  static fromMethod(target: any, propertyKey: string | symbol): Store {\n    return Store.from(target, propertyKey, descriptorOf(target, propertyKey));\n  }\n\n  /**\n   * The get() method returns a specified element from a Map object.\n   * @param key Required. The key of the element to return from the Map object.\n   * @param defaultValue\n   * @returns {T} Returns the element associated with the specified key or undefined if the key can't be found in the Map object.\n   */\n  get<T = any>(key: any, defaultValue?: any): T {\n    return this.#entries.get(nameOf(key)) || defaultValue;\n  }\n\n  /**\n   * The has() method returns a boolean indicating whether an element with the specified key exists or not.\n   * @param key\n   * @returns {boolean}\n   */\n  has(key: any): boolean {\n    return this.#entries.has(nameOf(key));\n  }\n\n  /**\n   * The set() method adds or updates an element with a specified key and value to a Map object.\n   * @param key Required. The key of the element to add to the Map object.\n   * @param metadata Required. The value of the element to add to the Map object.\n   */\n  set(key: any, metadata: any): Store {\n    this.#entries.set(nameOf(key), metadata);\n\n    return this;\n  }\n\n  /**\n   * The delete() method removes the specified element from a Map object.\n   * @param key Required. The key of the element to remove from the Map object.\n   * @returns {boolean} Returns true if an element in the Map object existed and has been removed, or false if the element does not exist.\n   */\n  delete(key: string): boolean {\n    return this.#entries.delete(nameOf(key));\n  }\n\n  /**\n   * Merge given value with existing value.\n   * @param key\n   * @param value\n   * @param inverse Change the merge order. Get the existing value and apply over given value\n   * @returns {Store}\n   */\n  merge(key: any, value: any, inverse: boolean = false): Store {\n    let _value_ = this.get(key);\n\n    if (_value_) {\n      value = deepClone(value);\n      _value_ = deepClone(_value_);\n      value = inverse ? deepMerge(value, _value_) : deepMerge(_value_, value);\n    }\n\n    this.set(key, value);\n\n    return this;\n  }\n}\n","/**\n * An example of a `Type` is `MyCustomComponent` filters, which in JavaScript is be represented by\n * the `MyCustomComponent` constructor function.\n */\n// tslint:disable-next-line: variable-name\n/**\n *\n */\nexport interface Type<T = any> extends Function {\n  new (...args: any[]): T;\n}\n\nexport const Type = Function;\n\n// @ts-ignore\nglobal.Type = Type;\n","import {classOf, decoratorTypeOf, nameOf} from \"../utils\";\n\nexport class UnsupportedDecoratorType extends Error {\n  name: \"UNSUPPORTED_DECORATOR_TYPE\";\n\n  constructor(decorator: any, args: any[]) {\n    super(UnsupportedDecoratorType.buildMessage(decorator, args));\n  }\n\n  private static buildMessage(decorator: any, args: any[]): string {\n    const [target, propertyKey, index] = args;\n\n    const bindingType = decoratorTypeOf(args);\n    const shortBinding = bindingType.split(\"/\")[0];\n    const param = shortBinding === \"parameter\" ? \".[\" + index + \"]\" : \"\";\n    const cstr = shortBinding === \"parameter\" ? \".constructor\" : \"\";\n    const method = propertyKey ? \".\" + propertyKey : cstr;\n\n    const path = nameOf(classOf(target)) + method + param;\n\n    return `${decorator.name} cannot be used as ${bindingType} decorator on ${path}`;\n  }\n}\n","import {Type} from \"../domain/Type\";\n\n/**\n * The `@Deprecated()` decorators wraps the given method in such a way that it is marked as deprecated.\n *\n * ```typescript\n * provide Foo {\n *\n * @Deprecated(\"Foo.method: Use Foo.method2 instead\")\n * public method() {\n *\n * }\n * ```\n *\n * When called, @Deprecated() will return a function that will emit a `DeprecationWarning` using the `process.on('warning')` event.\n * By default, this warning will be emitted and printed to `stderr` exactly once, the first time it is called. After the warning is emitted, the wrapped method is called.\n *\n * If either the `--no-deprecation` or `--no-warnings` command line flags are used, or if the `process.noDeprecation`\n * property is set to `true` prior to the first deprecation warning, the `@Deprecated()` decorators does nothing.\n *\n * If the `--trace-deprecation` or `--trace-warnings` command line flags are set, or the `process.traceDeprecation`\n * property is set to `true`, a warning and a stack trace are printed to stderr the first time the deprecated function is called.\n *\n * If the `--throw-deprecation` command line flag is set, or the `process.throwDeprecation` property is set to `true`,\n * then an exception will be thrown when the deprecated function is called.\n *\n * The `--throw-deprecation` command line flag and `process.throwDeprecation` property take precedence over `--trace-deprecation`\n * and `process.traceDeprecation`.\n *\n * @param message\n * @returns {Function}\n * @decorator\n */\nexport function Deprecated(message: string): Function {\n  return (target: Type<any>, targetKey: string, descriptor: TypedPropertyDescriptor<any>) => {\n    const originalMethod = descriptor.value;\n\n    descriptor.value = require(\"util\").deprecate(originalMethod, message);\n\n    return descriptor;\n  };\n}\n","/**\n * @module common/core\n */\nimport {descriptorOf} from \"../utils\";\n\n/** */\n\nexport function Configurable(value: boolean = true): Function {\n  return (target: any, propertyKey: string) => {\n    const descriptor = descriptorOf(target, propertyKey) || {writable: true, enumerable: true};\n    descriptor.configurable = value;\n    Object.defineProperty((target && target.prototype) || target, propertyKey, descriptor);\n\n    return descriptor;\n  };\n}\n","/**\n * @module common/core\n */\nimport {descriptorOf} from \"../utils\";\n\n/** */\n\nexport function Enumerable(value: boolean = true): Function {\n  return (target: any, propertyKey: string) => {\n    const descriptor = descriptorOf(target, propertyKey) || {writable: true, configurable: true};\n    descriptor.enumerable = value;\n    Object.defineProperty((target && target.prototype) || target, propertyKey, descriptor);\n\n    return descriptor;\n  };\n}\n","/**\n * @module common/core\n */\nimport {descriptorOf} from \"../utils\";\n\n/** */\n\nexport function Writable(value: boolean = true): Function {\n  return (target: any, propertyKey: string) => {\n    const descriptor = descriptorOf(target, propertyKey) || {configurable: true, enumerable: true};\n    descriptor.writable = value;\n    Object.defineProperty((target && target.prototype) || target, propertyKey, descriptor);\n\n    return descriptor;\n  };\n}\n","/**\n * @module common/core\n */\nimport {Writable} from \"./writable\";\n/** */\nexport function Readonly(): Function {\n  return Writable(false);\n}\n","/**\n * @module common/core\n */\nimport {Configurable} from \"./configurable\";\n/** */\nexport function NotConfigurable(): Function {\n  return Configurable(false);\n}\n","/**\n * @module common/core\n */\nimport {Enumerable} from \"./enumerable\";\n/** */\nexport function NotEnumerable(): Function {\n  return Enumerable(false);\n}\n","import {Store} from \"../domain/Store\";\nimport {DecoratorParameters} from \"../interfaces/DecoratorParameters\";\n\n/**\n * Create a store correctly configured from the parameters given by the decorator.\n * The `fn` can return a decorator that will be initialized with the parameters (target, propertyKey, descriptor).\n * @param {(store: Store, parameters: DecoratorParameters) => void} fn\n * @returns {Function}\n */\nexport function StoreFn(fn: (store: Store, parameters: DecoratorParameters) => void): Function {\n  return (...parameters: any[]): any => {\n    const store = Store.from(...parameters);\n    const result: any = fn(store, parameters as DecoratorParameters);\n    if (typeof result === \"function\") {\n      result(...parameters);\n    }\n\n    return parameters[2];\n  };\n}\n","import {Store} from \"../domain/Store\";\nimport {StoreFn} from \"./storeFn\";\n\nexport function StoreSet(key: any, value: any): Function {\n  return StoreFn((store: Store) => {\n    store.set(key, value);\n  });\n}\n","import {Store} from \"../domain/Store\";\nimport {StoreFn} from \"./storeFn\";\n\nexport function StoreMerge(key: any, value: any): Function {\n  return StoreFn((store: Store) => {\n    store.merge(key, value);\n  });\n}\n"],"names":["catchError","cb","er","catchAsyncError","proxyDelegation","self","options","handlers","remove","ownKeys","get","getter","target","propertyKey","set","setter","value","itsOwnProp","p","Reflect","has","Proxy","getOwnPropertyDescriptor","undefined","receiver","deleteProperty","defineProperty","attributes","concat","uniq","list","Array","from","Set","values","uniqBy","key","map","Map","forEach","item","getClass","prototype","constructor","classOf","getInheritedClass","Object","getPrototypeOf","nameOfClass","targetClass","name","nameOfSymbol","sym","toString","replace","nameOf","obj","ancestorsOf","classes","currentTarget","unshift","prototypeOf","methodsOf","methods","keys","descriptorOf","decorateMethodsOf","klass","decorator","args","apply","decoratorArgs","DecoratorTypes","decoratorTypeOf","descriptor","staticType","type","CLASS","inheritedDescriptorOf","useDecorators","decorators","filter","o","useMethodDecorator","useMethodDecorators","Boolean","isProtectedKey","includes","cleanObject","ignore","entries","reduce","getConstructor","constructorOf","isArray","isArrayOrArrayClass","isDate","Date","isNaN","isFunction","isNil","isBoolean","isBooleanOrBooleanClass","isNumber","isNumberOrNumberClass","Number","isString","isStringOrStringClass","String","isPrimitiveOrPrimitiveClass","isPrimitive","isPrimitiveClass","isSymbol","isSymbolOrSymbolClass","Symbol","isBasicType","source","deepClone","dest","setPrototypeOf","createInstance","create","objectKeys","reducer","collection","indexOf","push","deepExtends","out","reducers","defaultReducer","mergeReducerBuilder","index","findIndex","deepMerge","a","b","getReducer","parentKey","shouldReturnObj","shouldReturnSource","src","cleanUndefinedProps","isArrowFn","isClassObject","isPlainObject","isPromise","Promise","subscribe","then","isClass","getClassOrSymbol","toStringConstructor","ctr","strings","split","ctrString","find","s","trim","getConstructorArgNames","isEnumerable","enumerable","propertyIsEnumerable","call","getEnumerableKeys","isObject","mapOptions","expression","scope","defaultValue","separator","getValue","shift","length","isCollection","WeakMap","WeakSet","isEmpty","isInheritedFrom","deep","isObservable","lift","isStream","pipe","primitiveOf","setValue","add","createIdentityFn","keyOrFn","v","k","toMap","input","identity","ids","id","fixPath","require","normalizePath","paths","path","join","Entity","_target","propertyName","decoratorType","token","targetName","_type","computedType","collectionType","Env","EnvTypes","Hooks","on","event","listeners","off","emit","callThis","alter","asyncEmit","asyncAlter","DESIGN_PARAM_TYPES","DESIGN_TYPE","DESIGN_RETURN_TYPE","PROPERTIES","Metadata","getMetadata","getOwn","getOwnMetadata","getType","getOwnType","getReturnType","getOwnReturnType","hasMetadata","hasOwn","hasOwnMetadata","delete","deleteMetadata","setParamTypes","targets","classConstructor","defineMetadata","getParamTypes","targetPrototype","getOwnParamTypes","metadataKey","CLASS_STORE","METHOD_STORE","PROPERTY_STORE","PARAM_STORE","stores","storeGet","Store","registry","defineStore","PARAM_CTOR","PARAM_STC","PARAM","store","PROP","PROP_STC","METHOD","METHOD_STC","fromMethod","metadata","merge","inverse","_value_","Type","Function","global","UnsupportedDecoratorType","Error","buildMessage","bindingType","shortBinding","param","cstr","method","Deprecated","message","targetKey","originalMethod","deprecate","Configurable","writable","configurable","Enumerable","Writable","Readonly","NotConfigurable","NotEnumerable","StoreFn","fn","parameters","result","StoreSet","StoreMerge"],"mappings":"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"}